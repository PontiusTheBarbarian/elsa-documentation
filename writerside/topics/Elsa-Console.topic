<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Elsa Console" id="Elsa-Console">

    <p>
        Elsa Workflows can be seamlessly integrated into console applications, offering a lightweight approach to run workflows.
        This guide will walk you through setting up Elsa in a console application and running a simple workflow.
    </p>

    <chapter title="Setup" id="setup">
        <p>First, let's scaffold a new project by following these steps:</p>
        <procedure>
            <step>
                <control>Create Console Application</control>
                <p>Start by creating a new console application:</p>
                <code-block lang="console">
                    dotnet new console -n "ElsaConsole" -f net8.0
                </code-block>
            </step>
            <step>
                <control>Add Packages</control>
                <p>Navigate to your newly created project's root directory and add the following packages:</p>
                <code-block lang="console">
                    cd ElsaConsole
                    dotnet add package Elsa
                </code-block>
            </step>
            <step>
                <control>Modify Program.cs</control>
                <p>Open <code>Program.cs</code> and replace its contents with the following:</p>
                <code-block lang="c#" src="installation/elsa-console/Program1.cs"/>
                <p>
                    This code sets up a service container and adds Elsa services to it.
                    The <code>serviceProvider</code> can be used to resolve Elsa services and run workflows.
                </p>
            </step>
        </procedure>
    </chapter>

    <chapter title="Demo 1" id="demo-1">
        <p>
            Let's start with the most basic thing we can do with Elsa, which is executing an activity.
        </p>

        <procedure>
            <step>
                <p>Add the following code to <path>Program.cs</path>:</p>
                <code-block lang="c#" src="installation/elsa-console/Program2.cs" include-lines="4,15-22" show-white-spaces="true"/>
            </step>

            <step>
                <p>Run the program using the following command:</p>
                <code-block lang="bash">
                    dotnet run
                </code-block>
                <p>The console output should look like this:</p>
                <code-block lang="console">
                    Hello World!
                </code-block>
            </step>
        </procedure>
    </chapter>

    <chapter title="Demo 2" id="demo-2">
        <p>
            Let's try a slightly more interesting workflow, using the <code>Sequence</code> activity.
        </p>

        <procedure>
            <step>
                <p>Replace the previously added code to <path>Program.cs</path> with the following code:</p>
                <code-block lang="c#" src="installation/elsa-console/Program3.cs" include-lines="15-29" show-white-spaces="true"/>
            </step>

            <step>
                <p>Run the program using the following command:</p>
                <code-block lang="bash">
                    dotnet run
                </code-block>
                <p>The console output should look like this:</p>
                <code-block lang="console">
                    Hello World!
                    We can do more than a one-liner!
                </code-block>
            </step>
        </procedure>
    </chapter>

    <chapter title="Summary" id="summary">
        <p>
            In this guide, we created a simple Console application and leveraged Elsa's <code>IWorkflowRunner</code> service to execute an activity.
            Activities in Elsa are composable of other activities, which gives rise to the ability to construct complex workflow graphs.
        </p>
        <p>The complete code is available <a href="https://github.com/elsa-workflows/elsa-guides/tree/main/src/installation/elsa-console">here</a>.</p>
    </chapter>

    <seealso>
        <category ref="related">
            <a href="Elsa-Server.topic"/>
            <a href="Elsa-Studio.topic"/>
            <a href="Elsa-Server-Studio.topic"/>
        </category>
    </seealso>
</topic>
